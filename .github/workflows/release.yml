name: Release

on:
  push:
    tags:
      - 'v*'
permissions:
  contents: write
  actions: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release v${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false

  build-release:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: linux-x64
          - os: windows-latest
            target: win-x64
          - os: macos-latest
            target: osx-x64

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
          global-json-file: global.json

      - name: Publish
        run: |
          dotnet publish YouTubeToMp3/YouTubeToMp3.csproj -c Release -r ${{ matrix.target }} --self-contained true -p:PublishSingleFile=true -o ./publish

      - name: Compress output (windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Compress-Archive -Path './publish/*' -DestinationPath './YoutubeToMp3-${{ matrix.target }}.zip'
      - name: Package
        if: runner.os != 'Windows' 
        run: |
          zip -r "YouTubeToMp3-${{ matrix.target }}.zip" ./publish/*
        shell: bash

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./YouTubeToMp3-${{ matrix.target }}.zip
          asset_name: YouTubeToMp3-${{ matrix.target }}.zip
          asset_content_type: application/zip
